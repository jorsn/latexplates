\NeedsTeXFormat{LaTeX2e}
\RequirePackage{expl3}
\ProvidesExplPackage{shorthands}{2023-08-15}{0.2}{my default shorthands}

\ProcessOptions\relax

\RequirePackage{xparse}
\RequirePackage{amsmath,mathtools,amssymb,mathrsfs,bm,mleftright}

% Here, we define groups that are expanded like
%   \ceil{abc} -> \left\lceil abc\right\rceil
%   \ceil[\big]{abc} -> \big\lceil abc\big\rceil
\NewDocumentCommand {\DeclareGroup} {mmm} {
  \DeclareDocumentCommand {#1} {somo} {
    \IfValueTF {##2} {
      \cs_set:Npn \gmid {\use:c{\cs_to_str:N ##2 m}}
    }{
      \let\gmid\middle
    }
    {
    \IfValueTF {##2} {
      \IfBooleanTF {##1} {
        \let\gleft##2
        \let\gright##2
      }{
        \cs_set:Npn \gleft  { \use:c { \cs_to_str:N ##2 l } }
        \cs_set:Npn \gright { \use:c { \cs_to_str:N ##2 r } }
      }
    }{
      \IfBooleanTF {##1} {
        \let\gleft\left
        \let\gright\right
      }{
        \let\gleft\mleft
        \let\gright\mright
      }
    }
    \gleft#2##3 \IfValueT{##4}{\gmid##4} \gright#3
    }
  }
}
\DeclareGroup{\ceil} \lceil \rceil
\DeclareGroup{\floor} \lfloor \rfloor
\DeclareGroup{\brack}{[}{]}
  \let\intv\brack
\DeclareGroup{\paren}()
  \let\tup\paren
\DeclareGroup{\chevr} \langle \rangle
\DeclareGroup{\braces}\{\}
  \let\set\braces
\DeclareGroup{\verts} \lvert \rvert
  \let\abs\verts
  \let\card\abs % cardinality
\DeclareGroup{\norm}\|\|

\DeclareGroup{\bra}\langle |
\DeclareGroup{\ket}| \rangle

\NewExpandableDocumentCommand \PassStar {mm} {
  \ifx #2\BooleanTrue\expandafter{#1*}\else\expandafter#1\fi
}
\NewExpandableDocumentCommand \SepGroup {mm somm} {
  \PassStar {#1} {#3} [#4] { #5 } [ #2 #6 ]
}
\NewExpandableDocumentCommand \pureProj {som} {\PassStar\ketbra{#1}[#2]{#3}{#3}}

\NewExpandableDocumentCommand \braket {} { \SepGroup \chevr \rvert }
\NewExpandableDocumentCommand \ketbra {somm} {
  \PassStar \ket {#1} [#2] {#3}
  \kern -.25em
  \PassStar \bra {#1} [#2] {#4}
}

% Additional math operators

\DeclareMathOperator{\conv}{con} % convex hull
\let\con\conv
\DeclareMathOperator{\closure}{cl}
\DeclareMathOperator{\interior}{int}

\DeclareMathOperator{\supp}{supp} % support
\DeclareMathOperator{\Unif}{Unif} % uniform distribution

\DeclareMathOperator*{\argmax}{arg{\:}max}
\DeclareMathOperator*{\argmin}{arg{\:}min}

\let\transp\intercal % matrix transposition
\DeclareMathOperator{\trace}{tr}
\DeclareMathOperator{\diag}{diag}
\DeclareMathOperator{\dimension}{dim}


% We set abbreviations for maths characters in different fonts,
% e.g. \rA...\rZ for \mathrm{A}...\mathrm{Z},
% \rra...\rrz for \mathrm{a}...\mathrm{z}, etc.
% For lowercase letters we use double letters to avoid
% name clashes, since, e.g., \rm is already defined

% We start with macros for setting a single letter,
% and later apply them to every alphabet letter.

% lowercase
\cs_new:Npn \set_lower_fonts:n #1 % #1 is one letter
{%
  \cs_new:cpn { rr#1 }   {\mathrm{#1}}
  \cs_new:cpn { tt#1 }   {\tilde{#1}}
  \expandafter\DeclareBoldMathCommand\csname bb#1\endcsname{#1}
  \expandafter\DeclareBoldMathCommand\csname bt#1\endcsname{\csname tt#1\endcsname}
}

% uppercase
\cs_new:Npn \set_upper_fonts:n #1 % #1 is one letter
{%
  \cs_new:cpn { r#1 }   {\mathrm{#1}}
  \cs_new:cpn { t#1 }   {\tilde{#1}}
  \expandafter\DeclareBoldMathCommand\csname b#1\endcsname{#1}
  \expandafter\DeclareBoldMathCommand\csname bt#1\endcsname{\csname t#1\endcsname}

  \cs_new:cpn { c#1 }   {\mathcal{#1}}
  \cs_new:cpn { scr#1 } {\mathscr{#1}}
  \cs_new:cpn { tc#1 }  {\mathcal{\csname t#1\endcsname}} % latex3 idiomatic would be \mathcal{\use:c { t#1 }}

  \expandafter\DeclareBoldMathCommand\csname bc#1\endcsname{\csname c#1\endcsname}
  \expandafter\DeclareBoldMathCommand\csname btc#1\endcsname{\csname tc#1\endcsname}
}

% Now, we apply the macros to every letter in the alphabet
\int_step_inline:nn {\int_from_alph:n {z}} { \set_lower_fonts:n {\int_to_alph:n {#1}} }
\int_step_inline:nn {\int_from_alph:n {Z}} { \set_upper_fonts:n {\int_to_Alph:n {#1}} }

\cs_new:Nn \set_bb:n {
  \cs_new:cpn { bb #1 } { \mathbb{#1} }
}

% define special blackboard characters
%\clist_map_inline:nn {B,C,E,F,N,P,Q,R,Z,V}
\int_step_inline:nn {\int_from_alph:n {Z}} { \set_bb:n {\int_to_Alph:n {#1}} }

\let\expect\bbE % expectation
\DeclareDocumentCommand{\One}{}{\mathbbold{1}}

\NewExpandableDocumentCommand{\ind}{}{ \One\tup }
\let\idOp\One


% vim: ts=2 sw=2
